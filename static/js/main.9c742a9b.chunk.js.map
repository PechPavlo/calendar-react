{"version":3,"sources":["components/context.jsx","components/Header.jsx","components/Cell.jsx","components/Table.jsx","components/services/API_service_singltone.js","components/services/API_service_decorator.js","components/Authorize.jsx","components/DeleteModal.jsx","App.jsx","index.jsx"],"names":["Context","React","createContext","Header","props","users","changeUser","filteredByUser","changeFilteredByUser","newEvent","isAdmin","team","map","user","data","name","useState","filteredByUserHeader","setFilteredByUserHeader","useEffect","className","id","value","onChange","event","target","member","type","onClick","Cell","useContext","myEvents","currentUser","setEventToDelete","dayTime","myEvent","find","elem","isInFilter","participants","includes","console","log","data-cell","data-cell_name","eventName","data-del_btn","data-cell_list","Table","days","day","time","draggable","data-time","ServiceAPI","get","entity","a","url","settingsObject","URL","SYSTEM","fetch","method","response","json","result","error","create","entityBody","body","headers","Accept","change","delete","status","ServiceAPISingltone","instance","this","Object","freeze","serviceAPIDecorated","service","showErrorMessage","message","errorModal","document","querySelector","textContent","classList","add","finisedResult","JSON","parse","replaceAll","stringify","Authorize","setAuthorizedUser","userToAuthorize","setUserToAuthorize","DeleteModal","eventToDelete","setIsEventsUpdated","handleDeleteModal","App","initUsers","password","usersData","setUsers","setMyEvents","isEventsUpdated","isUsersUpdated","setIsUsersUpdated","isAuthorized","setIsAuthorized","setCurrentUser","setFilteredByUser","getUsers","getEvents","events","Provider","userToSet","userToFilter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c742a9b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext(null);\n\nexport default Context;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n\nconst Header = (props) => {\n  const {\n    users, changeUser, filteredByUser, changeFilteredByUser, newEvent, isAdmin,\n  } = props;\n  const team = [...users.map((user) => user.data.name), 'All'];\n  const [filteredByUserHeader, setFilteredByUserHeader] = useState(filteredByUser);\n  const handleChange = (event) => {\n    setFilteredByUserHeader(event.target.value);\n    changeFilteredByUser(event.target.value);\n  };\n  useEffect(() => {\n    setFilteredByUserHeader(filteredByUser);\n  }, [filteredByUser]);\n  return (\n    <div className=\"main_top-container\">\n      <h1>Calendar-react</h1>\n      <div className=\"controls\">\n        <select\n          className=\"filtered-by\"\n          id=\"filter\"\n          value={filteredByUserHeader}\n          onChange={handleChange}\n        >\n          {team.map((member) => (\n            <option className=\"member\" value={member} key={`filter-${member}`}>\n              {member === 'All' ? 'All members' : member}\n            </option>\n          ))}\n        </select>\n        <button className=\"change_user-btn\" type=\"button\" onClick={() => changeUser()}>Change User</button>\n        {isAdmin && <button className=\"add-event-btn\" type=\"button\" onClick={() => newEvent()}>New event +</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/* eslint-disable react/prop-types */\nimport React, { useContext } from 'react';\nimport Context from './context';\n\nconst Cell = (props) => {\n  const [myEvents, currentUser, setEventToDelete, filteredByUser] = useContext(Context);\n  const { dayTime } = props;\n  const myEvent = myEvents?.find((elem) => elem.data.dayTime === dayTime);\n  const isInFilter = myEvent?.data.participants.includes(filteredByUser);\n  console.log(isInFilter);\n  const { isAdmin } = currentUser.data;\n  if (myEvent && (isInFilter || filteredByUser === 'All')) {\n    return (\n      <div>\n        <div className=\"calendar_cell booked\" data-cell={dayTime}>\n          <span className=\"calendar_cell-name\" data-cell_name={dayTime}>\n            {myEvent.data.eventName}\n          </span>\n          {isAdmin && (\n          <button\n            className=\"calendar_cell-del_btn\"\n            data-del_btn={dayTime}\n            type=\"button\"\n            onClick={() => setEventToDelete(myEvent)}\n          >\n            &#10006;\n          </button>\n          )}\n\n        </div>\n        <ul className=\"calendar_cell_participants\" data-cell_list={dayTime}>\n          {myEvent.data.participants.map((member) => <li className=\"calendar_cell_participant\" key={`${dayTime}-${member}`}>{member}</li>)}\n        </ul>\n      </div>\n    );\n  }\n  return <div>{ /* empty */ }</div>;\n};\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell';\n\nconst Table = () => {\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const times = [10, 11, 12, 13, 14, 15, 16, 17, 18];\n\n  return (\n    <table className=\"calendar\">\n      <thead>\n        <tr className=\"calendar-header\">\n          {['Name', ...days].map((day) => (\n            <th className=\"calendar_header-item\" key={`thead-${day}`}>{day}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {times.map((time) => (\n          <tr className=\"calendar-row\" key={`tbody-tr-${time}`}>\n            {['Name', ...days].map((day) => (day === 'Name' ? (\n              <td className=\"calendar_row-item\" key={`tbody-${time}`}>{`${time}:00`}</td>\n            ) : (\n              <td\n                className=\"calendar_row-item\"\n                draggable=\"true\"\n                data-time={`${day}${time}`}\n                key={`tbody-${day}${time}`}\n              >\n                <Cell\n                  dayTime={`${day}${time}`}\n                />\n              </td>\n            )))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","class ServiceAPISingltone {\n  constructor() {\n    if (ServiceAPISingltone.instance instanceof ServiceAPISingltone) {\n      return ServiceAPISingltone.instance;\n    }\n\n    this.settingsObject = {\n      URL: 'http://158.101.166.74:8080/api/data/',\n      SYSTEM: 'pavlo_pechenevskyi',\n    };\n    Object.freeze(this.settingsObject);\n    Object.freeze(this);\n    ServiceAPISingltone.instance = this;\n  }\n\n    get = async (entity) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'get',\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    create = async (entity, entityBody) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: entityBody,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    change = async (entity, id, entityBody) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}/${id}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'PUT',\n          body: entityBody,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    delete = async (entity, id) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}/${id}`;\n\n      try {\n        const { status } = await fetch(url, {\n          method: 'DELETE',\n        });\n        return status;\n      } catch (error) {\n        return { error };\n      }\n    };\n}\n\nconst ServiceAPI = new ServiceAPISingltone();\n\nexport default ServiceAPI;\n","import ServiceAPI from './API_service_singltone';\n\nclass APIServiceDecorator {\n  constructor(service) {\n    this.service = service;\n  }\n\n  showErrorMessage = (message) => {\n    const errorModal = document.querySelector('#error-modal');\n    const errorSpan = document.querySelector('.error_modal-subtitle');\n    errorSpan.textContent = message;\n    errorModal.classList.add('active');\n  };\n\n  async get(entity) {\n    const result = await this.service.get(entity);\n    let finisedResult = null;\n    if (result && result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    if (result) {\n      finisedResult = result.map((elem) => ({ id: elem.id, data: JSON.parse(elem.data.replaceAll('\\\\\"', '\"')) }));\n    }\n    return finisedResult;\n  }\n\n  async create(entity, entityBody) {\n    const finisedResult = {};\n    const result = await this.service.create(entity, `{\"data\":\"${JSON.stringify(entityBody).replaceAll('\"', '\\\\\"')}\"}`);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    finisedResult.id = result.id;\n    finisedResult.data = JSON.parse(result.data.replaceAll('\\\\\"', '\"'));\n    return finisedResult;\n  }\n\n  async change(entity, id, entityBody) {\n    const finisedResult = {};\n    const result = await this.service.change(entity, id, `{\"data\":\"${JSON.stringify(entityBody).replaceAll('\"', '\\\\\"')}\"}`);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    finisedResult.id = result.id;\n    finisedResult.data = JSON.parse(result.data.replaceAll('\\\\\"', '\"'));\n    return finisedResult;\n  }\n\n  async delete(entity, id) {\n    const result = await this.service.delete(entity, id);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    console.log(result);\n    return result;\n  }\n}\n\nconst serviceAPIDecorated = new APIServiceDecorator(ServiceAPI);\nexport default serviceAPIDecorated;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n\nconst Authorize = (props) => {\n  const { users, currentUser, setAuthorizedUser } = props;\n  const [userToAuthorize, setUserToAuthorize] = useState(currentUser.data.name);\n  useEffect(() => {\n    setUserToAuthorize(currentUser.data.name);\n    // console.log('auth0', currentUser, userToAuthorize);\n  }, [currentUser]);\n  const handleChange = (event) => {\n    setUserToAuthorize(event.target.value);\n    // console.log('auth1', userToAuthorize);\n  };\n  return (\n    <div className=\"modal_wrapper active\" id=\"authorize-modal\">\n      <div className=\"authorize_modal-container\">\n        <span className=\"authorize_modal-title\">Please authorize</span>\n        <select\n          className=\"autorized-by\"\n          value={userToAuthorize}\n          onChange={handleChange}\n        >\n          {users?.map((user) => (\n            <option\n              className=\"user\"\n              value={user.data.name}\n              key={user.id}\n            >\n              {user.data.name}\n            </option>\n          ))}\n        </select>\n        <div className=\"authorize_modal-footer\">\n          <button\n            className=\"confirm_authorize_modal-btn\"\n            id=\"confirm_user\"\n            type=\"button\"\n            onClick={() => setAuthorizedUser(userToAuthorize)}\n          >\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Authorize;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useContext } from 'react';\nimport Context from './context';\nimport service from './services/API_service_decorator';\n\nconst DeleteModal = (props) => {\n  const { eventToDelete, setIsEventsUpdated } = props;\n  const [myEvents, currentUser, setEventToDelete] = useContext(Context);\n  //   const [userToAuthorize, setUserToAuthorize] = useState(currentUser.data.name);\n  //   useEffect(() => {\n  //     setUserToAuthorize(currentUser.data.name);\n  //     // console.log('auth0', currentUser, userToAuthorize);\n  //   }, [currentUser]);\n  const handleDeleteModal = async (event) => {\n    if (event.target.id === 'no_delete' || event.target.id === 'delete-modal') setEventToDelete(null);\n    if (event.target.id === 'yes_delete') {\n      await service.delete('events', eventToDelete.id);\n      setIsEventsUpdated(false);\n      setEventToDelete(null);\n    }\n    console.log('eventToDelete', event.target.id, eventToDelete);\n  };\n  return (\n    <div className=\"modal_wrapper active\" id=\"delete-modal\" onClick={handleDeleteModal}>\n      <div className=\"delete_modal-container\">\n        <span className=\"delete_modal-title\">Are you sure you want to delete</span>\n        <span className=\"delete_modal-subtitle\">{`\"${eventToDelete.data.eventName}\" event?`}</span>\n        <div className=\"delete_modal-footer\">\n          <button className=\"no_delete_event-btn\" type=\"button\" id=\"no_delete\" onClick={handleDeleteModal}>\n            No\n          </button>\n          <button className=\"yes_delete_event-btn\" type=\"button\" id=\"yes_delete\" onClick={handleDeleteModal}>\n            Yes\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default DeleteModal;\n","import React, { useState, useEffect } from 'react';\nimport Context from './components/context';\nimport Header from './components/Header';\n// import NewEvent from './components/NewEvent/NewEvent';\nimport Table from './components/Table';\nimport service from './components/services/API_service_decorator';\nimport Authorize from './components/Authorize';\nimport DeleteModal from './components/DeleteModal';\n\nfunction App() {\n  const initUsers = [{ id: 'a6a136dc-fd2b-4073-a1ae-214589cc73e6', data: { isAdmin: true, name: 'test', password: '' } }];\n  const [usersData, setUsers] = useState([...initUsers]);\n  const [myEvents, setMyEvents] = useState([]);\n  const [eventToDelete, setEventToDelete] = useState(null);\n  // const [isLoading, setIsLoading] = useState(true);\n  const [isEventsUpdated, setIsEventsUpdated] = useState(false);\n  const [isUsersUpdated, setIsUsersUpdated] = useState(false);\n  const [isAuthorized, setIsAuthorized] = useState(true);\n  const [currentUser, setCurrentUser] = useState(initUsers[0]);\n  const [filteredByUser, setFilteredByUser] = useState('All');\n\n  const getUsers = async () => {\n    const users = await service.get('users');\n    setCurrentUser(users[0]);\n    setUsers(users);\n    // setIsLoading(false);\n    setIsUsersUpdated(true);\n    setIsAuthorized(false);\n    // console.log('after', usersData, currentUser, mEevents);\n    // if (users === null) {\n    //   props.team.map((member) => ServiceAPI.create('users', new User(member, '')));\n    //   setTimeout(ServiceAPI.create('users', new Admin('Boss', 'superPassword')), 500);\n    //   setTimeout(loadData, 1000);\n    // }\n    // if (users) props.users = users;\n    // init(props);\n    // main();\n    // props.users?.map((user) => deleteEntity('users', user.id)); // to delete all users!!!\n  };\n\n  const getEvents = async () => {\n    const events = await service.get('events');\n    setMyEvents(events);\n    // setIsLoading(false);\n    setIsEventsUpdated(true);\n  };\n\n  useEffect(() => {\n    if (!isUsersUpdated) getUsers();\n    // console.log('isUsersUpdated', usersData, isUsersUpdated, currentUser, myEvents);\n  }, [isUsersUpdated]);\n\n  useEffect(() => {\n    if (!isEventsUpdated) getEvents();\n    // console.log('isEventsUpdated', usersData, isEventsUpdated, currentUser, myEvents);\n  }, [isEventsUpdated]);\n\n  const setAuthorizedUser = (userToSet) => {\n    setIsAuthorized(true);\n    setCurrentUser(usersData.find((user) => user.data.name === userToSet));\n    // console.log(userToSet, currentUser);\n  };\n\n  const handleChangeUser = () => {\n    setIsAuthorized(false);\n  };\n\n  const handlerNewEvent = () => {\n    console.log('New Event');\n  };\n\n  const handlerFilteredByUser = (userToFilter) => {\n    setFilteredByUser(userToFilter);\n  };\n\n  if (!isUsersUpdated) {\n    return (\n      <div>\n        <p>Loading ...</p>\n        <span className=\"loading-ring\" />\n      </div>\n    );\n  }\n  return (\n    <Context.Provider value={[myEvents, currentUser, setEventToDelete, filteredByUser]}>\n      {/* <div className=\"App\"> */}\n      {!isAuthorized && (\n        <Authorize\n          users={usersData}\n          currentUser={currentUser}\n          setAuthorizedUser={setAuthorizedUser}\n        />\n      )}\n      { eventToDelete && (\n      <DeleteModal\n        eventToDelete={eventToDelete}\n        setIsEventsUpdated={setIsEventsUpdated}\n      />\n      )}\n      <Header\n        isAdmin={currentUser.data.isAdmin}\n        users={usersData}\n        changeUser={handleChangeUser}\n        changeFilteredByUser={handlerFilteredByUser}\n        newEvent={handlerNewEvent}\n        filteredByUser={filteredByUser}\n      />\n      <Table />\n      {/* {isLoading && <span className=\"loading-ring\" />} */}\n      {/* <NewEvent /> */}\n      {/* </div> */}\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}