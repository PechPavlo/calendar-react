{"version":3,"sources":["components/Header.jsx","components/Cell.jsx","components/Table.jsx","components/services/API_service_singltone.js","components/services/API_service_decorator.js","components/Authorize.jsx","App.jsx","index.jsx"],"names":["Header","props","users","changeUser","filteredByUser","changeFilteredByUser","newEvent","team","map","user","data","name","useState","filteredByUserHeader","setFilteredByUserHeader","useEffect","className","id","value","onChange","event","target","member","type","onClick","Cell","data-cell","data-cell_name","data-del_btn","data-cell_list","Table","days","day","time","draggable","data-time","ServiceAPI","get","entity","a","url","settingsObject","URL","SYSTEM","fetch","method","response","json","result","error","create","entityBody","body","headers","Accept","change","delete","status","ServiceAPISingltone","instance","this","Object","freeze","serviceAPIDecorated","service","showErrorMessage","message","errorModal","document","querySelector","textContent","classList","add","finisedResult","elem","JSON","parse","replaceAll","stringify","console","log","Authorize","currentUser","setAuthorizedUser","userToAuthorize","setUserToAuthorize","App","initUsers","isAdmin","password","usersData","setUsers","mEevents","setMyEvents","isLoading","setIsLoading","isAuthorized","setIsAuthorized","setCurrentUser","setFilteredByUser","getUsers","events","userToSet","find","userToFilter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cdbe7a4.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n\nconst Header = (props) => {\n  const {\n    users, changeUser, filteredByUser, changeFilteredByUser, newEvent,\n  } = props;\n  const team = [...users.map((user) => user.data.name), 'All'];\n  const [filteredByUserHeader, setFilteredByUserHeader] = useState(filteredByUser);\n  const handleChange = (event) => {\n    setFilteredByUserHeader(event.target.value);\n    changeFilteredByUser(event.target.value);\n  };\n  useEffect(() => {\n    setFilteredByUserHeader(filteredByUser);\n  }, [filteredByUser]);\n  return (\n    <div className=\"main_top-container\">\n      <h1>Calendar-react</h1>\n      <div className=\"controls\">\n        <select\n          className=\"filtered-by\"\n          id=\"filter\"\n          value={filteredByUserHeader}\n          onChange={handleChange}\n        >\n          {team.map((member) => (\n            <option className=\"member\" value={member} key={`filter-${member}`}>\n              {member === 'All' ? 'All members' : member}\n            </option>\n          ))}\n        </select>\n        <button className=\"change_user-btn\" type=\"button\" onClick={() => changeUser()}>Change User</button>\n        <button className=\"add-event-btn\" type=\"button\" onClick={() => newEvent()}>New event +</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Cell = () => (\n  <div>\n    <div className=\"calendar_cell\" data-cell=\"Monday10\">\n      <span className=\"calendar_cell-name\" data-cell_name=\"Monday10\">\n        John, Alex\n      </span>\n      <button\n        className=\"calendar_cell-del_btn\"\n        data-del_btn=\"Monday10\"\n        type=\"button\"\n      >\n        &#10006;\n      </button>\n\n    </div>\n    <ul className=\"calendar_cell_participants\" data-cell_list=\"Monday10\">\n      <li className=\"calendar_cell_participant\">Bob</li>\n      <li className=\"calendar_cell_participant\">Alex</li>\n    </ul>\n  </div>\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell';\n\nconst Table = () => {\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const times = [10, 11, 12, 13, 14, 15, 16, 17, 18];\n\n  return (\n    <table className=\"calendar\">\n      <tr className=\"calendar-header\">\n        {['Name', ...days].map((day) => (\n          <th className=\"calendar_header-item\">{day}</th>\n        ))}\n      </tr>\n      {times.map((time) => (\n        <tr className=\"calendar-row\">\n          {['Name', ...days].map((day) => (day === 'Name' ? (\n            <td className=\"calendar_row-item\">{`${time}:00`}</td>\n          ) : (\n            <td\n              className=\"calendar_row-item\"\n              draggable=\"true\"\n              data-time={`${day}${time}`}\n            >\n              <Cell />\n            </td>\n          )))}\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nexport default Table;\n","class ServiceAPISingltone {\n  constructor() {\n    if (ServiceAPISingltone.instance instanceof ServiceAPISingltone) {\n      return ServiceAPISingltone.instance;\n    }\n\n    this.settingsObject = {\n      URL: 'http://158.101.166.74:8080/api/data/',\n      SYSTEM: 'pavlo_pechenevskyi',\n    };\n    Object.freeze(this.settingsObject);\n    Object.freeze(this);\n    ServiceAPISingltone.instance = this;\n  }\n\n    get = async (entity) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'get',\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    create = async (entity, entityBody) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: entityBody,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    change = async (entity, id, entityBody) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}/${id}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'PUT',\n          body: entityBody,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    delete = async (entity, id) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}/${id}`;\n\n      try {\n        const { status } = await fetch(url, {\n          method: 'DELETE',\n        });\n        return status;\n      } catch (error) {\n        return { error };\n      }\n    };\n}\n\nconst ServiceAPI = new ServiceAPISingltone();\n\nexport default ServiceAPI;\n","import ServiceAPI from './API_service_singltone';\n\nclass APIServiceDecorator {\n  constructor(service) {\n    this.service = service;\n  }\n\n  showErrorMessage = (message) => {\n    const errorModal = document.querySelector('#error-modal');\n    const errorSpan = document.querySelector('.error_modal-subtitle');\n    errorSpan.textContent = message;\n    errorModal.classList.add('active');\n  };\n\n  async get(entity) {\n    const result = await this.service.get(entity);\n    let finisedResult = null;\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    if (result) {\n      finisedResult = result.map((elem) => ({ id: elem.id, data: JSON.parse(elem.data.replaceAll('\\\\\"', '\"')) }));\n    }\n    return finisedResult;\n  }\n\n  async create(entity, entityBody) {\n    const finisedResult = {};\n    const result = await this.service.create(entity, `{\"data\":\"${JSON.stringify(entityBody).replaceAll('\"', '\\\\\"')}\"}`);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    finisedResult.id = result.id;\n    finisedResult.data = JSON.parse(result.data.replaceAll('\\\\\"', '\"'));\n    return finisedResult;\n  }\n\n  async change(entity, id, entityBody) {\n    const finisedResult = {};\n    const result = await this.service.change(entity, id, `{\"data\":\"${JSON.stringify(entityBody).replaceAll('\"', '\\\\\"')}\"}`);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    finisedResult.id = result.id;\n    finisedResult.data = JSON.parse(result.data.replaceAll('\\\\\"', '\"'));\n    return finisedResult;\n  }\n\n  async delete(entity, id) {\n    const result = await this.service.delete(entity, id);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    console.log(result);\n    return result;\n  }\n}\n\nconst serviceAPIDecorated = new APIServiceDecorator(ServiceAPI);\nexport default serviceAPIDecorated;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n\nconst Authorize = (props) => {\n  const { users, currentUser, setAuthorizedUser } = props;\n  const [userToAuthorize, setUserToAuthorize] = useState(currentUser.data.name);\n  useEffect(() => {\n    setUserToAuthorize(currentUser.data.name);\n    // console.log('auth0', currentUser, userToAuthorize);\n  }, [currentUser]);\n  const handleChange = (event) => {\n    setUserToAuthorize(event.target.value);\n    // console.log('auth1', userToAuthorize);\n  };\n  return (\n    <div className=\"modal_wrapper active\" id=\"authorize-modal\">\n      <div className=\"authorize_modal-container\">\n        <span className=\"authorize_modal-title\">Please authorize</span>\n        <select\n          className=\"autorized-by\"\n          value={userToAuthorize}\n          onChange={handleChange}\n        >\n          {users?.map((user) => (\n            <option\n              className=\"user\"\n              value={user.data.name}\n              key={user.id}\n            >\n              {user.data.name}\n            </option>\n          ))}\n        </select>\n        <div className=\"authorize_modal-footer\">\n          <button\n            className=\"confirm_authorize_modal-btn\"\n            id=\"confirm_user\"\n            type=\"button\"\n            onClick={() => setAuthorizedUser(userToAuthorize)}\n          >\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Authorize;\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\n// import NewEvent from './components/NewEvent/NewEvent';\nimport Table from './components/Table';\nimport service from './components/services/API_service_decorator';\nimport Authorize from './components/Authorize';\n\nfunction App() {\n  const initUsers = [{ id: 'a6a136dc-fd2b-4073-a1ae-214589cc73e6', data: { isAdmin: true, name: 'test', password: '' } }];\n  const [usersData, setUsers] = useState([...initUsers]);\n  const [mEevents, setMyEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthorized, setIsAuthorized] = useState(true);\n  const [currentUser, setCurrentUser] = useState(initUsers[0]);\n  const [filteredByUser, setFilteredByUser] = useState('All');\n\n  const getUsers = async () => {\n    const users = await service.get('users');\n    const events = await service.get('events');\n    setCurrentUser(users[0]);\n    setUsers(users);\n    setMyEvents(events);\n    setIsLoading(false);\n    setIsAuthorized(false);\n    // console.log('after', usersData, currentUser, mEevents);\n    // if (users === null) {\n    //   props.team.map((member) => ServiceAPI.create('users', new User(member, '')));\n    //   setTimeout(ServiceAPI.create('users', new Admin('Boss', 'superPassword')), 500);\n    //   setTimeout(loadData, 1000);\n    // }\n    // if (users) props.users = users;\n    // init(props);\n    // main();\n    // props.users?.map((user) => deleteEntity('users', user.id)); // to delete all users!!!\n  };\n\n  useEffect(() => {\n    if (isLoading) getUsers();\n    console.log('Вы', usersData, isLoading, currentUser, mEevents);\n  }, [isLoading]);\n\n  const setAuthorizedUser = (userToSet) => {\n    setIsAuthorized(true);\n    setCurrentUser(usersData.find((user) => user.data.name === userToSet));\n    // console.log(userToSet, currentUser);\n  };\n\n  const handleChangeUser = () => {\n    setIsAuthorized(false);\n  };\n\n  const handlerNewEvent = () => {\n    console.log('New Event');\n  };\n\n  const handlerFilteredByUser = (userToFilter) => {\n    setFilteredByUser(userToFilter);\n  };\n\n  if (isLoading) {\n    return <span className=\"loading-ring\" />;\n  }\n  return (\n    <div className=\"App\">\n      {!isAuthorized && (\n        <Authorize\n          users={usersData}\n          currentUser={currentUser}\n          setAuthorizedUser={setAuthorizedUser}\n        />\n      )}\n      <Header\n        users={usersData}\n        changeUser={handleChangeUser}\n        changeFilteredByUser={handlerFilteredByUser}\n        newEvent={handlerNewEvent}\n        filteredByUser={filteredByUser}\n      />\n      <Table />\n      {/* {isLoading && <span className=\"loading-ring\" />} */}\n      {/* <NewEvent /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}