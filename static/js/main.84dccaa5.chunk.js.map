{"version":3,"sources":["components/context.jsx","components/Header.jsx","components/services/API_service_singltone.js","components/services/API_service_decorator.js","components/MyEvent.js","components/AddDropdown.jsx","components/NewEvent/NewEvent.jsx","components/Cell.jsx","components/Table.jsx","components/Authorize.jsx","components/DeleteModal.jsx","App.jsx","index.jsx"],"names":["Context","React","createContext","Header","props","users","changeUser","filteredByUser","changeFilteredByUser","newEvent","isAdmin","team","map","user","data","name","useState","filteredByUserHeader","setFilteredByUserHeader","useEffect","className","id","value","onChange","event","target","member","type","onClick","ServiceAPI","get","entity","a","url","settingsObject","URL","SYSTEM","fetch","method","response","json","result","error","create","entityBody","body","headers","Accept","change","delete","status","ServiceAPISingltone","instance","this","Object","freeze","serviceAPIDecorated","service","showErrorMessage","message","errorModal","document","querySelector","textContent","classList","add","finisedResult","elem","JSON","parse","replaceAll","stringify","console","log","MyEvent","day","time","eventName","members","dayTime","participants","AddDropdown","setMembersList","isActive","setIsActive","isChecked","setIsChecked","newMembersList","setNewMembersList","whoIsChecked","forEach","handlChange","checked","membersList","filter","data-drop","length","join","includes","NewEvent","days","times","setEventToAdd","setIsEventsUpdated","myEvents","isFree","setIsFree","isAllOk","setIsAllOk","newDay","setNewDay","newTime","setNewTime","newName","setNewName","handleAddEvent","preventDefault","find","myEvent","setTimeout","onSubmit","placeholder","required","minLength","maxLength","ev","htmlFor","form","defaultValue","Cell","useContext","currentUser","setEventToDelete","isInFilter","data-cell","data-cell_name","data-del_btn","data-cell_list","Table","draggable","data-time","Authorize","setAuthorizedUser","userToAuthorize","setUserToAuthorize","DeleteModal","eventToDelete","handleDeleteModal","App","initUsers","password","usersData","setUsers","setMyEvents","eventToAdd","isEventsUpdated","isUsersUpdated","setIsUsersUpdated","isAuthorized","setIsAuthorized","setCurrentUser","setFilteredByUser","getUsers","getEvents","events","Provider","userToSet","userToFilter","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84dccaa5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext(null);\n\nexport default Context;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n\nconst Header = (props) => {\n  const {\n    users, changeUser, filteredByUser, changeFilteredByUser, newEvent, isAdmin,\n  } = props;\n  const team = [...users.map((user) => user.data.name), 'All'];\n  const [filteredByUserHeader, setFilteredByUserHeader] = useState(filteredByUser);\n  const handleChange = (event) => {\n    setFilteredByUserHeader(event.target.value);\n    changeFilteredByUser(event.target.value);\n  };\n  useEffect(() => {\n    setFilteredByUserHeader(filteredByUser);\n  }, [filteredByUser]);\n  return (\n    <div className=\"main_top-container\">\n      <h1>Calendar-react</h1>\n      <div className=\"controls\">\n        <select\n          className=\"filtered-by\"\n          id=\"filter\"\n          value={filteredByUserHeader}\n          onChange={handleChange}\n        >\n          {team.map((member) => (\n            <option className=\"member\" value={member} key={`filter-${member}`}>\n              {member === 'All' ? 'All members' : member}\n            </option>\n          ))}\n        </select>\n        <button className=\"change_user-btn\" type=\"button\" onClick={() => changeUser()}>Change User</button>\n        {isAdmin && <button className=\"add-event-btn\" type=\"button\" onClick={() => newEvent()}>New event +</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","class ServiceAPISingltone {\n  constructor() {\n    if (ServiceAPISingltone.instance instanceof ServiceAPISingltone) {\n      return ServiceAPISingltone.instance;\n    }\n\n    this.settingsObject = {\n      URL: 'http://158.101.166.74:8080/api/data/',\n      SYSTEM: 'pavlo_pechenevskyi',\n    };\n    Object.freeze(this.settingsObject);\n    Object.freeze(this);\n    ServiceAPISingltone.instance = this;\n  }\n\n    get = async (entity) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'get',\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    create = async (entity, entityBody) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: entityBody,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    change = async (entity, id, entityBody) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}/${id}`;\n      let result;\n\n      try {\n        const response = await fetch(url, {\n          method: 'PUT',\n          body: entityBody,\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n        result = await response.json();\n      } catch (error) {\n        return { error };\n      }\n      return result;\n    };\n\n    delete = async (entity, id) => {\n      const url = `${this.settingsObject.URL}${this.settingsObject.SYSTEM}/${entity}/${id}`;\n\n      try {\n        const { status } = await fetch(url, {\n          method: 'DELETE',\n        });\n        return status;\n      } catch (error) {\n        return { error };\n      }\n    };\n}\n\nconst ServiceAPI = new ServiceAPISingltone();\n\nexport default ServiceAPI;\n","import ServiceAPI from './API_service_singltone';\n\nclass APIServiceDecorator {\n  constructor(service) {\n    this.service = service;\n  }\n\n  showErrorMessage = (message) => {\n    const errorModal = document.querySelector('#error-modal');\n    const errorSpan = document.querySelector('.error_modal-subtitle');\n    errorSpan.textContent = message;\n    errorModal.classList.add('active');\n  };\n\n  async get(entity) {\n    const result = await this.service.get(entity);\n    let finisedResult = null;\n    if (result && result.error) {\n      finisedResult = result;\n      // this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    if (result) {\n      finisedResult = result.map((elem) => ({ id: elem.id, data: JSON.parse(elem.data.replaceAll('\\\\\"', '\"')) }));\n    }\n    return finisedResult;\n  }\n\n  async create(entity, entityBody) {\n    let finisedResult = {};\n    const result = await this.service.create(entity, `{\"data\":\"${JSON.stringify(entityBody).replaceAll('\"', '\\\\\"')}\"}`);\n    if (result.error) {\n      finisedResult = result;\n      return result;\n      // this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    finisedResult.id = result.id;\n    finisedResult.data = JSON.parse(result.data.replaceAll('\\\\\"', '\"'));\n    return finisedResult;\n  }\n\n  async change(entity, id, entityBody) {\n    const finisedResult = {};\n    const result = await this.service.change(entity, id, `{\"data\":\"${JSON.stringify(entityBody).replaceAll('\"', '\\\\\"')}\"}`);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    finisedResult.id = result.id;\n    finisedResult.data = JSON.parse(result.data.replaceAll('\\\\\"', '\"'));\n    return finisedResult;\n  }\n\n  async delete(entity, id) {\n    const result = await this.service.delete(entity, id);\n    if (result.error) {\n      this.showErrorMessage(`in ${entity}: ${result.error}`);\n    }\n    console.log(result);\n    return result;\n  }\n}\n\nconst serviceAPIDecorated = new APIServiceDecorator(ServiceAPI);\nexport default serviceAPIDecorated;\n","export default class MyEvent {\n  constructor(day, time, eventName, members) {\n    this.day = day;\n    this.time = time;\n    this.dayTime = `${day}${time}`;\n    this.eventName = eventName;\n    this.participants = members;\n  }\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n\nconst AddDropdown = (props) => {\n  const { users, setMembersList } = props;\n  const [isActive, setIsActive] = useState(false);\n  const [isChecked, setIsChecked] = useState({});\n  const [newMembersList, setNewMembersList] = useState([]);\n  const team = users.map((user) => user.data.name);\n  //   const team = [...users.map((user) => user.data.name), 'All'];\n  const whoIsChecked = isChecked;\n\n  useEffect(() => {\n    setIsChecked(whoIsChecked);\n    // console.log('whoIsChecked', whoIsChecked);\n    team.forEach((member) => { whoIsChecked[member] = false; });\n  }, []);\n\n  //   console.log(whoIsChecked, isChecked);\n\n  const handleAddDropdown = (event) => {\n    setIsActive(!isActive);\n    setMembersList(newMembersList);\n  };\n  const handlChange = (event) => {\n    // console.log('memberToAdd', event.target.value, event.target.checked);\n    whoIsChecked[event.target.value] = event.target.checked;\n    setIsChecked(whoIsChecked);\n    const membersList = team.filter((member) => whoIsChecked[member]);\n    setNewMembersList(membersList);\n  };\n  return (\n    <div className={`add_dropdown ${isActive && 'active'}`} data-drop=\"down\">\n      <div className=\"add_dropdown-main\" data-drop=\"down\" onClick={handleAddDropdown}>\n        <span className=\"add_dropdown-selected\" data-drop=\"down\">\n          {newMembersList.length ? newMembersList.join(', ') : 'chose participants'}\n        </span>\n        <select\n          className=\"add_dropdown-fake_select\"\n          data-drop=\"down\"\n        />\n      </div>\n      <div className=\"add_dropdown-content\" data-drop=\"down\">\n        {team.map((member) => (\n          <label className=\"member\" data-drop=\"down\">\n            {member === 'All' ? 'All members' : member}\n            <input\n              className=\"member-selected-to-add\"\n              type=\"checkbox\"\n              value={member}\n              data-drop=\"down\"\n              checked={newMembersList.includes(member)}\n              onChange={handlChange}\n            />\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AddDropdown;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useEffect } from 'react';\nimport '../../assets/style/NewEvent.scss';\nimport service from '../services/API_service_decorator';\nimport MyEvent from '../MyEvent';\nimport AddDropdown from '../AddDropdown';\n\nconst NewEvent = (props) => {\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const times = [10, 11, 12, 13, 14, 15, 16, 17, 18];\n  const {\n    users, setEventToAdd, setIsEventsUpdated, myEvents,\n  } = props;\n  const [isFree, setIsFree] = useState(true);\n  const [isAllOk, setIsAllOk] = useState(false);\n  const [newDay, setNewDay] = useState(days[0]);\n  const [newTime, setNewTime] = useState(times[0]);\n  const [newName, setNewName] = useState('');\n  const [membersList, setMembersList] = useState([]);\n  // console.log('new mem', membersList);\n  const handleAddEvent = async (event) => {\n    event.preventDefault();\n    if (event.target.id === 'cancel_add' || event.target.id === 'add-modal') setEventToAdd(null);\n    if (myEvents.find((myEvent) => myEvent.data.dayTime === `${newDay}${newTime}`)) {\n      // console.log('isBooked');\n      setIsFree(false);\n    } else {\n      console.log('myEvents', myEvents, newDay, newTime);\n      // eslint-disable-next-line max-len\n      const result = await service.create('events', new MyEvent(newDay, newTime, newName, membersList));\n      console.log(result);\n      if (!result.error) {\n        setIsAllOk(true);\n        setTimeout(() => {\n          setEventToAdd(null);\n          setIsEventsUpdated(false);\n          setIsAllOk(false);\n        }, 3000);\n      }\n    }\n  };\n  return (\n    <div className=\"modal_wrapper active\" id=\"add-modal\">\n      <div className=\"add_modal-container\">\n        <div className={`add_modal-error ${!isFree && 'booked'}`}>\n          <span>Failed to create an event. Time slot is already booked.</span>\n          <button id=\"add_modal-error_btn\" onClick={() => setIsFree(true)} />\n        </div>\n        <div className={`add_modal-no-error ${isAllOk && 'booked'}`}>\n          <span>The new event has succesfuly created.</span>\n        </div>\n        <form id=\"add-form\" onSubmit={handleAddEvent}>\n          <label className=\"add_lable\">\n            Name of the event:\n            <input\n              className=\"add_form-name\"\n              id=\"new_event-name\"\n              placeholder=\"Event name\"\n              type=\"text\"\n              required\n              minLength=\"1\"\n              maxLength=\"25\"\n              onChange={(ev) => setNewName(ev.target.value)}\n            />\n          </label>\n          <label className=\"add_lable\" htmlFor=\"add_select\">\n            Participants:\n            <AddDropdown\n              users={users}\n              setMembersList={setMembersList}\n            />\n            <input\n              id=\"add_select\"\n              form=\"add-form\"\n              required\n              data-drop=\"down\"\n              value={membersList.length ? membersList.join(', ') : ''}\n            />\n          </label>\n          <label className=\"add_lable\">\n            Day:\n            <select className=\"add_day\" defaultValue={newDay} onChange={(ev) => setNewDay(ev.target.value)}>\n              {days.map((day) => (\n                <option className=\"day\" value={day} key={`new-day-${day}`}>\n                  {day}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label className=\"add_lable\">\n            Time:\n            <select className=\"add_time\" defaultValue={newTime} onChange={(ev) => setNewTime(ev.target.value)}>\n              {times.map((time) => (\n                <option className=\"time\" value={time} key={`new-time-${time}`}>\n                  {`${time}:00`}\n                </option>\n              ))}\n            </select>\n          </label>\n        </form>\n        <div className=\"add_modal-footer\">\n          <button className=\"cancel_add_event-btn\" id=\"cancel_add\" onClick={handleAddEvent}>\n            Cancel\n          </button>\n          <button className=\"create_add_event-btn\" id=\"create_add\" form=\"add-form\" type=\"submit\">\n            Create\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewEvent;\n","/* eslint-disable react/prop-types */\nimport React, { useContext } from 'react';\nimport Context from './context';\n\nconst Cell = (props) => {\n  const {\n    myEvents, currentUser, setEventToDelete, filteredByUser,\n  } = useContext(Context);\n  const { dayTime } = props;\n  const myEvent = myEvents?.find((elem) => elem.data.dayTime === dayTime);\n  const isInFilter = myEvent?.data.participants.includes(filteredByUser);\n  const { isAdmin } = currentUser.data;\n  if (myEvent && (isInFilter || filteredByUser === 'All')) {\n    return (\n      <div>\n        <div className=\"calendar_cell booked\" data-cell={dayTime}>\n          <span className=\"calendar_cell-name\" data-cell_name={dayTime}>\n            {myEvent.data.eventName}\n          </span>\n          {isAdmin && (\n          <button\n            className=\"calendar_cell-del_btn\"\n            data-del_btn={dayTime}\n            type=\"button\"\n            onClick={() => setEventToDelete(myEvent)}\n          >\n            &#10006;\n          </button>\n          )}\n\n        </div>\n        <ul className=\"calendar_cell_participants\" data-cell_list={dayTime}>\n          {myEvent.data.participants.map((member) => <li className=\"calendar_cell_participant\" key={`${dayTime}-${member}`}>{member}</li>)}\n        </ul>\n      </div>\n    );\n  }\n  return <div>{ /* empty */ }</div>;\n};\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell';\n\nconst Table = () => {\n  const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const times = [10, 11, 12, 13, 14, 15, 16, 17, 18];\n\n  return (\n    <table className=\"calendar\">\n      <thead>\n        <tr className=\"calendar-header\">\n          {['Name', ...days].map((day) => (\n            <th className=\"calendar_header-item\" key={`thead-${day}`}>{day}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {times.map((time) => (\n          <tr className=\"calendar-row\" key={`tbody-tr-${time}`}>\n            {['Name', ...days].map((day) => (day === 'Name' ? (\n              <td className=\"calendar_row-item\" key={`tbody-${time}`}>{`${time}:00`}</td>\n            ) : (\n              <td\n                className=\"calendar_row-item\"\n                draggable=\"true\"\n                data-time={`${day}${time}`}\n                key={`tbody-${day}${time}`}\n              >\n                <Cell\n                  dayTime={`${day}${time}`}\n                />\n              </td>\n            )))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n\nconst Authorize = (props) => {\n  const { users, currentUser, setAuthorizedUser } = props;\n  const [userToAuthorize, setUserToAuthorize] = useState(currentUser.data.name);\n  useEffect(() => {\n    setUserToAuthorize(currentUser.data.name);\n  }, [currentUser]);\n  const handleChange = (event) => {\n    setUserToAuthorize(event.target.value);\n  };\n  return (\n    <div className=\"modal_wrapper active\" id=\"authorize-modal\">\n      <div className=\"authorize_modal-container\">\n        <span className=\"authorize_modal-title\">Please authorize</span>\n        <select\n          className=\"autorized-by\"\n          value={userToAuthorize}\n          onChange={handleChange}\n        >\n          {users?.map((user) => (\n            <option\n              className=\"user\"\n              value={user.data.name}\n              key={user.id}\n            >\n              {user.data.name}\n            </option>\n          ))}\n        </select>\n        <div className=\"authorize_modal-footer\">\n          <button\n            className=\"confirm_authorize_modal-btn\"\n            id=\"confirm_user\"\n            type=\"button\"\n            onClick={() => setAuthorizedUser(userToAuthorize)}\n          >\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Authorize;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useContext } from 'react';\nimport Context from './context';\nimport service from './services/API_service_decorator';\n\nconst DeleteModal = (props) => {\n  const { eventToDelete, setIsEventsUpdated } = props;\n  const { setEventToDelete } = useContext(Context);\n  const handleDeleteModal = async (event) => {\n    if (event.target.id === 'no_delete' || event.target.id === 'delete-modal') setEventToDelete(null);\n    if (event.target.id === 'yes_delete') {\n      await service.delete('events', eventToDelete.id);\n      setIsEventsUpdated(false);\n      setEventToDelete(null);\n    }\n    // console.log('eventToDelete', event.target.id, eventToDelete);\n  };\n  return (\n    <div className=\"modal_wrapper active\" id=\"delete-modal\" onClick={handleDeleteModal}>\n      <div className=\"delete_modal-container\">\n        <span className=\"delete_modal-title\">Are you sure you want to delete</span>\n        <span className=\"delete_modal-subtitle\">{`\"${eventToDelete.data.eventName}\" event?`}</span>\n        <div className=\"delete_modal-footer\">\n          <button className=\"no_delete_event-btn\" type=\"button\" id=\"no_delete\" onClick={handleDeleteModal}>\n            No\n          </button>\n          <button className=\"yes_delete_event-btn\" type=\"button\" id=\"yes_delete\" onClick={handleDeleteModal}>\n            Yes\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default DeleteModal;\n","import React, { useState, useEffect } from 'react';\nimport Context from './components/context';\nimport Header from './components/Header';\nimport NewEvent from './components/NewEvent/NewEvent';\nimport Table from './components/Table';\nimport service from './components/services/API_service_decorator';\nimport Authorize from './components/Authorize';\nimport DeleteModal from './components/DeleteModal';\n\nfunction App() {\n  const initUsers = [{ id: 'a6a136dc-fd2b-4073-a1ae-214589cc73e6', data: { isAdmin: true, name: 'test', password: '' } }];\n  const [usersData, setUsers] = useState([...initUsers]);\n  const [myEvents, setMyEvents] = useState([]);\n  const [eventToDelete, setEventToDelete] = useState(null);\n  const [eventToAdd, setEventToAdd] = useState(null);\n  // const [isLoading, setIsLoading] = useState(true);\n  const [isEventsUpdated, setIsEventsUpdated] = useState(false);\n  const [isUsersUpdated, setIsUsersUpdated] = useState(false);\n  const [isAuthorized, setIsAuthorized] = useState(true);\n  const [currentUser, setCurrentUser] = useState(initUsers[0]);\n  const [filteredByUser, setFilteredByUser] = useState('All');\n\n  const getUsers = async () => {\n    const users = await service.get('users');\n    setCurrentUser(users[0]);\n    setUsers(users);\n    // setIsLoading(false);\n    setIsUsersUpdated(true);\n    setIsAuthorized(false);\n    // console.log('after', usersData, currentUser, mEevents);\n    // if (users === null) {\n    //   props.team.map((member) => ServiceAPI.create('users', new User(member, '')));\n    //   setTimeout(ServiceAPI.create('users', new Admin('Boss', 'superPassword')), 500);\n    //   setTimeout(loadData, 1000);\n    // }\n    // if (users) props.users = users;\n    // init(props);\n    // main();\n    // props.users?.map((user) => deleteEntity('users', user.id)); // to delete all users!!!\n  };\n\n  const getEvents = async () => {\n    const events = await service.get('events');\n    setMyEvents(events);\n    // setIsLoading(false);\n    setIsEventsUpdated(true);\n  };\n\n  useEffect(() => {\n    if (!isUsersUpdated) getUsers();\n    // console.log('isUsersUpdated', usersData, isUsersUpdated, currentUser, myEvents);\n  }, [isUsersUpdated]);\n\n  useEffect(() => {\n    if (!isEventsUpdated) getEvents();\n    // console.log('isEventsUpdated', usersData, isEventsUpdated, currentUser, myEvents);\n  }, [isEventsUpdated]);\n\n  const setAuthorizedUser = (userToSet) => {\n    setIsAuthorized(true);\n    setCurrentUser(usersData.find((user) => user.data.name === userToSet));\n    // console.log(userToSet, currentUser);\n  };\n\n  const handleChangeUser = () => {\n    setIsAuthorized(false);\n  };\n\n  const handlerNewEvent = () => {\n    setEventToAdd('some');\n    console.log('New Event');\n  };\n\n  const handlerFilteredByUser = (userToFilter) => {\n    setFilteredByUser(userToFilter);\n  };\n\n  if (!isUsersUpdated) {\n    return (\n      <div>\n        <p>Loading ...</p>\n        <span className=\"loading-ring\" />\n      </div>\n    );\n  }\n  return (\n    <Context.Provider value={{\n      myEvents, currentUser, setEventToDelete, filteredByUser,\n    }}\n    >\n      {/* <div className=\"App\"> */}\n      {!isAuthorized && (\n        <Authorize\n          users={usersData}\n          currentUser={currentUser}\n          setAuthorizedUser={setAuthorizedUser}\n        />\n      )}\n      { eventToDelete && (\n      <DeleteModal\n        eventToDelete={eventToDelete}\n        setIsEventsUpdated={setIsEventsUpdated}\n      />\n      )}\n      {eventToAdd && (\n        <NewEvent\n          users={usersData}\n          setEventToAdd={setEventToAdd}\n          setIsEventsUpdated={setIsEventsUpdated}\n          myEvents={myEvents}\n        />\n      )}\n      <Header\n        isAdmin={currentUser.data.isAdmin}\n        users={usersData}\n        changeUser={handleChangeUser}\n        changeFilteredByUser={handlerFilteredByUser}\n        newEvent={handlerNewEvent}\n        filteredByUser={filteredByUser}\n      />\n      <Table />\n      {/* {isLoading && <span className=\"loading-ring\" />} */}\n      {/* </div> */}\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}